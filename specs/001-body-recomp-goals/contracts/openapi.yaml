openapi: 3.0.3
info:
  title: Body Recomposition Tracking API
  version: 1.0.0
  description: |
    RESTful API for tracking body recomposition goals including cutting and bulking phases.
    
    ## Features
    - User registration and authentication with JWT tokens
    - Multiple body fat calculation methods (Navy, 3-Site, 7-Site Skinfold)
    - Goal creation and tracking (cutting/bulking)
    - Weekly progress logging and visualization
    - Personalized training and diet plans
    
    ## Authentication
    Most endpoints require JWT bearer token authentication. Obtain tokens via `/api/v1/auth/login`.
    
  contact:
    name: Body Recomp API Support
    email: support@bodyrecomp.example.com
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT

servers:
  - url: http://localhost:8000
    description: Local development server
  - url: https://api.bodyrecomp.example.com
    description: Production server

tags:
  - name: Authentication
    description: User authentication and token management
  - name: Users
    description: User profile management
  - name: Measurements
    description: Body measurement tracking
  - name: Goals
    description: Body recomposition goal management
  - name: Progress
    description: Weekly progress tracking
  - name: Plans
    description: Training and diet plan access

security:
  - BearerAuth: []

paths:
  /api/v1/users:
    post:
      tags:
        - Users
      summary: Register a new user
      description: Create a new user account with initial profile information
      operationId: registerUser
      security: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserCreate'
            examples:
              cutting_user:
                summary: User planning to cut
                value:
                  email: john.doe@example.com
                  password: SecurePass123!
                  full_name: John Doe
                  date_of_birth: "1990-05-15"
                  gender: male
                  height_cm: 175.5
                  preferred_calculation_method: navy
                  activity_level: moderately_active
              bulking_user:
                summary: User planning to bulk
                value:
                  email: jane.smith@example.com
                  password: StrongPass456!
                  full_name: Jane Smith
                  date_of_birth: "1995-08-22"
                  gender: female
                  height_cm: 165.0
                  preferred_calculation_method: 3_site
                  activity_level: very_active
      responses:
        '201':
          description: User successfully created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
              example:
                id: 550e8400-e29b-41d4-a716-446655440000
                email: john.doe@example.com
                full_name: John Doe
                date_of_birth: "1990-05-15"
                gender: male
                height_cm: 175.5
                preferred_calculation_method: navy
                activity_level: moderately_active
                created_at: "2025-10-23T10:30:00Z"
                updated_at: "2025-10-23T10:30:00Z"
        '400':
          $ref: '#/components/responses/BadRequest'
        '422':
          $ref: '#/components/responses/ValidationError'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /api/v1/auth/login:
    post:
      tags:
        - Authentication
      summary: User login
      description: Authenticate user and receive access and refresh tokens
      operationId: loginUser
      security: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - password
              properties:
                email:
                  type: string
                  format: email
                  example: john.doe@example.com
                password:
                  type: string
                  format: password
                  example: SecurePass123!
      responses:
        '200':
          description: Login successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  access_token:
                    type: string
                    description: JWT access token (expires in 15 minutes)
                    example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
                  refresh_token:
                    type: string
                    description: JWT refresh token (expires in 7 days)
                    example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
                  token_type:
                    type: string
                    example: bearer
                  expires_in:
                    type: integer
                    description: Access token expiry in seconds
                    example: 900
        '401':
          $ref: '#/components/responses/Unauthorized'
        '422':
          $ref: '#/components/responses/ValidationError'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /api/v1/auth/refresh:
    post:
      tags:
        - Authentication
      summary: Refresh access token
      description: Exchange refresh token for a new access token
      operationId: refreshToken
      security: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - refresh_token
              properties:
                refresh_token:
                  type: string
                  description: Valid refresh token
                  example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
      responses:
        '200':
          description: Token refreshed successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  access_token:
                    type: string
                    example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
                  token_type:
                    type: string
                    example: bearer
                  expires_in:
                    type: integer
                    example: 900
        '401':
          $ref: '#/components/responses/Unauthorized'
        '422':
          $ref: '#/components/responses/ValidationError'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /api/v1/users/me:
    get:
      tags:
        - Users
      summary: Get current user profile
      description: Retrieve the authenticated user's profile information
      operationId: getCurrentUser
      responses:
        '200':
          description: User profile retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
    
    patch:
      tags:
        - Users
      summary: Update current user profile
      description: Update the authenticated user's profile information
      operationId: updateCurrentUser
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserUpdate'
            examples:
              update_activity:
                summary: Update activity level
                value:
                  activity_level: very_active
              update_height:
                summary: Update height
                value:
                  height_cm: 176.0
              update_multiple:
                summary: Update multiple fields
                value:
                  full_name: John David Doe
                  activity_level: extremely_active
                  preferred_calculation_method: 7_site
      responses:
        '200':
          description: User profile updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '422':
          $ref: '#/components/responses/ValidationError'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /api/v1/measurements:
    post:
      tags:
        - Measurements
      summary: Create a new body measurement
      description: |
        Log a new body measurement with method-specific measurements.
        The system calculates body fat percentage based on the provided calculation method.
        
        Required measurements by method:
        - **Navy**: waist_cm, neck_cm, (hip_cm for women)
        - **3-Site**: chest_mm, abdomen_mm, thigh_mm (men) OR tricep_mm, suprailiac_mm, thigh_mm (women)
        - **7-Site**: chest_mm, midaxillary_mm, tricep_mm, subscapular_mm, abdomen_mm, suprailiac_mm, thigh_mm
      operationId: createMeasurement
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MeasurementCreate'
            examples:
              navy_male:
                summary: Navy Method (Male)
                value:
                  weight_kg: 90.0
                  calculation_method: navy
                  waist_cm: 95.0
                  neck_cm: 40.0
                  measured_at: "2025-10-23T08:00:00Z"
                  notes: "Morning measurement"
              navy_female:
                summary: Navy Method (Female)
                value:
                  weight_kg: 70.0
                  calculation_method: navy
                  waist_cm: 80.0
                  neck_cm: 35.0
                  hip_cm: 100.0
                  measured_at: "2025-10-23T08:00:00Z"
              3_site_male:
                summary: 3-Site Skinfold (Male)
                value:
                  weight_kg: 85.0
                  calculation_method: 3_site
                  chest_mm: 12.0
                  abdomen_mm: 20.0
                  thigh_mm: 15.0
                  measured_at: "2025-10-23T08:00:00Z"
              7_site:
                summary: 7-Site Skinfold
                value:
                  weight_kg: 80.0
                  calculation_method: 7_site
                  chest_mm: 10.0
                  midaxillary_mm: 12.0
                  tricep_mm: 8.0
                  subscapular_mm: 14.0
                  abdomen_mm: 18.0
                  suprailiac_mm: 11.0
                  thigh_mm: 13.0
                  measured_at: "2025-10-23T08:00:00Z"
      responses:
        '201':
          description: Measurement created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BodyMeasurement'
              example:
                id: 660e8400-e29b-41d4-a716-446655440001
                user_id: 550e8400-e29b-41d4-a716-446655440000
                weight_kg: 90.0
                calculation_method: navy
                waist_cm: 95.0
                neck_cm: 40.0
                hip_cm: null
                calculated_body_fat_percentage: 22.5
                notes: "Morning measurement"
                measured_at: "2025-10-23T08:00:00Z"
                created_at: "2025-10-23T08:05:00Z"
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '422':
          $ref: '#/components/responses/ValidationError'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /api/v1/goals:
    post:
      tags:
        - Goals
      summary: Create a new goal
      description: |
        Create a cutting or bulking goal. The system calculates caloric targets and timeline projections.
        
        **Cutting**: Set target_body_fat_percentage lower than current
        **Bulking**: Set ceiling_body_fat_percentage higher than current
      operationId: createGoal
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoalCreate'
            examples:
              cutting:
                summary: Cutting Goal
                value:
                  goal_type: cutting
                  initial_measurement_id: 660e8400-e29b-41d4-a716-446655440001
                  target_body_fat_percentage: 15.0
              bulking:
                summary: Bulking Goal
                value:
                  goal_type: bulking
                  initial_measurement_id: 660e8400-e29b-41d4-a716-446655440001
                  ceiling_body_fat_percentage: 18.0
      responses:
        '201':
          description: Goal created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Goal'
              examples:
                cutting:
                  summary: Cutting Goal Response
                  value:
                    id: 770e8400-e29b-41d4-a716-446655440002
                    user_id: 550e8400-e29b-41d4-a716-446655440000
                    goal_type: cutting
                    status: active
                    initial_measurement_id: 660e8400-e29b-41d4-a716-446655440001
                    initial_body_fat_percentage: 22.5
                    target_body_fat_percentage: 15.0
                    ceiling_body_fat_percentage: null
                    initial_weight_kg: 90.0
                    target_calories: 2200
                    estimated_weeks_to_goal: 40
                    current_body_fat_percentage: 22.5
                    progress_percentage: 0.0
                    weeks_elapsed: 0
                    is_on_track: true
                    started_at: "2025-10-23T08:10:00Z"
                    completed_at: null
                    created_at: "2025-10-23T08:10:00Z"
                    updated_at: "2025-10-23T08:10:00Z"
                bulking:
                  summary: Bulking Goal Response
                  value:
                    id: 770e8400-e29b-41d4-a716-446655440003
                    user_id: 550e8400-e29b-41d4-a716-446655440000
                    goal_type: bulking
                    status: active
                    initial_measurement_id: 660e8400-e29b-41d4-a716-446655440001
                    initial_body_fat_percentage: 12.0
                    target_body_fat_percentage: null
                    ceiling_body_fat_percentage: 18.0
                    initial_weight_kg: 75.0
                    target_calories: 2900
                    estimated_weeks_to_goal: 130
                    current_body_fat_percentage: 12.0
                    progress_percentage: 0.0
                    weeks_elapsed: 0
                    is_on_track: true
                    started_at: "2025-10-23T08:10:00Z"
                    completed_at: null
                    created_at: "2025-10-23T08:10:00Z"
                    updated_at: "2025-10-23T08:10:00Z"
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          description: User already has an active goal
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                detail: You already have an active goal. Complete or abandon it before creating a new one.
                error_code: ACTIVE_GOAL_EXISTS
        '404':
          $ref: '#/components/responses/NotFound'
        '422':
          $ref: '#/components/responses/ValidationError'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /api/v1/goals/{goal_id}:
    get:
      tags:
        - Goals
      summary: Get goal details
      description: Retrieve detailed information about a specific goal including current progress
      operationId: getGoal
      parameters:
        - name: goal_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
          description: Goal unique identifier
          example: 770e8400-e29b-41d4-a716-446655440002
      responses:
        '200':
          description: Goal retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Goal'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /api/v1/goals/{goal_id}/progress:
    post:
      tags:
        - Progress
      summary: Log progress entry
      description: |
        Create a weekly progress entry by linking a new measurement to a goal.
        The system automatically calculates changes from previous entry and tracks on-track status.
      operationId: createProgressEntry
      parameters:
        - name: goal_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
          description: Goal unique identifier
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - measurement_id
              properties:
                measurement_id:
                  type: string
                  format: uuid
                  description: ID of the measurement to log as progress
                  example: 660e8400-e29b-41d4-a716-446655440005
                notes:
                  type: string
                  description: Optional notes about this week's progress
                  example: "Great week, felt energetic"
            example:
              measurement_id: 660e8400-e29b-41d4-a716-446655440005
              notes: "Week 1 complete, feeling strong"
      responses:
        '201':
          description: Progress entry created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProgressEntry'
              example:
                id: 880e8400-e29b-41d4-a716-446655440006
                goal_id: 770e8400-e29b-41d4-a716-446655440002
                measurement_id: 660e8400-e29b-41d4-a716-446655440005
                week_number: 1
                body_fat_percentage: 22.0
                weight_kg: 88.5
                body_fat_change: -0.5
                weight_change_kg: -1.5
                is_on_track: true
                notes: "Week 1 complete, feeling strong"
                logged_at: "2025-10-30T08:00:00Z"
                created_at: "2025-10-30T08:05:00Z"
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '422':
          $ref: '#/components/responses/ValidationError'
        '500':
          $ref: '#/components/responses/InternalServerError'
    
    get:
      tags:
        - Progress
      summary: Get progress history
      description: Retrieve all progress entries for a goal, ordered chronologically
      operationId: getProgressHistory
      parameters:
        - name: goal_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
          description: Goal unique identifier
      responses:
        '200':
          description: Progress history retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  goal_id:
                    type: string
                    format: uuid
                  entries:
                    type: array
                    items:
                      $ref: '#/components/schemas/ProgressEntry'
                  total_entries:
                    type: integer
                    description: Total number of progress entries
              example:
                goal_id: 770e8400-e29b-41d4-a716-446655440002
                total_entries: 3
                entries:
                  - id: 880e8400-e29b-41d4-a716-446655440006
                    goal_id: 770e8400-e29b-41d4-a716-446655440002
                    measurement_id: 660e8400-e29b-41d4-a716-446655440005
                    week_number: 1
                    body_fat_percentage: 22.0
                    weight_kg: 88.5
                    body_fat_change: -0.5
                    weight_change_kg: -1.5
                    is_on_track: true
                    notes: "Week 1 complete"
                    logged_at: "2025-10-30T08:00:00Z"
                    created_at: "2025-10-30T08:05:00Z"
                  - id: 880e8400-e29b-41d4-a716-446655440007
                    goal_id: 770e8400-e29b-41d4-a716-446655440002
                    measurement_id: 660e8400-e29b-41d4-a716-446655440008
                    week_number: 2
                    body_fat_percentage: 21.5
                    weight_kg: 87.0
                    body_fat_change: -0.5
                    weight_change_kg: -1.5
                    is_on_track: true
                    notes: null
                    logged_at: "2025-11-06T08:00:00Z"
                    created_at: "2025-11-06T08:05:00Z"
                  - id: 880e8400-e29b-41d4-a716-446655440009
                    goal_id: 770e8400-e29b-41d4-a716-446655440002
                    measurement_id: 660e8400-e29b-41d4-a716-446655440010
                    week_number: 3
                    body_fat_percentage: 21.2
                    weight_kg: 86.2
                    body_fat_change: -0.3
                    weight_change_kg: -0.8
                    is_on_track: true
                    notes: null
                    logged_at: "2025-11-13T08:00:00Z"
                    created_at: "2025-11-13T08:05:00Z"
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /api/v1/goals/{goal_id}/trends:
    get:
      tags:
        - Progress
      summary: Get progress trends
      description: |
        Retrieve trend analysis data including time-series data, moving averages, and projections.
        Useful for visualizing progress over time.
      operationId: getProgressTrends
      parameters:
        - name: goal_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
          description: Goal unique identifier
      responses:
        '200':
          description: Trend data retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  goal_id:
                    type: string
                    format: uuid
                  initial_body_fat:
                    type: number
                    format: float
                    description: Starting body fat percentage
                  current_body_fat:
                    type: number
                    format: float
                    description: Current body fat percentage
                  target_body_fat:
                    type: number
                    format: float
                    nullable: true
                    description: Target body fat (cutting) or ceiling (bulking)
                  data_points:
                    type: array
                    description: Time-series data points
                    items:
                      type: object
                      properties:
                        week:
                          type: integer
                        date:
                          type: string
                          format: date-time
                        body_fat_percentage:
                          type: number
                          format: float
                        weight_kg:
                          type: number
                          format: float
                  moving_average_4week:
                    type: array
                    description: 4-week moving average of body fat percentage
                    items:
                      type: object
                      properties:
                        week:
                          type: integer
                        value:
                          type: number
                          format: float
                  trend_line:
                    type: object
                    description: Linear regression trend line
                    properties:
                      slope:
                        type: number
                        format: float
                        description: Rate of change per week
                      intercept:
                        type: number
                        format: float
                      projected_completion_week:
                        type: integer
                        nullable: true
                        description: Estimated week to reach goal
                  velocity:
                    type: object
                    description: Current progress velocity
                    properties:
                      current_rate:
                        type: number
                        format: float
                        description: Current rate of change (% per week)
                      expected_rate:
                        type: number
                        format: float
                        description: Expected rate based on goal type
                      is_on_pace:
                        type: boolean
              example:
                goal_id: 770e8400-e29b-41d4-a716-446655440002
                initial_body_fat: 22.5
                current_body_fat: 21.2
                target_body_fat: 15.0
                data_points:
                  - week: 0
                    date: "2025-10-23T08:00:00Z"
                    body_fat_percentage: 22.5
                    weight_kg: 90.0
                  - week: 1
                    date: "2025-10-30T08:00:00Z"
                    body_fat_percentage: 22.0
                    weight_kg: 88.5
                  - week: 2
                    date: "2025-11-06T08:00:00Z"
                    body_fat_percentage: 21.5
                    weight_kg: 87.0
                  - week: 3
                    date: "2025-11-13T08:00:00Z"
                    body_fat_percentage: 21.2
                    weight_kg: 86.2
                moving_average_4week:
                  - week: 3
                    value: 21.8
                trend_line:
                  slope: -0.43
                  intercept: 22.5
                  projected_completion_week: 52
                velocity:
                  current_rate: -0.43
                  expected_rate: -0.2
                  is_on_pace: true
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /api/v1/goals/{goal_id}/training-plan:
    get:
      tags:
        - Plans
      summary: Get training plan
      description: Retrieve the training plan associated with a goal
      operationId: getTrainingPlan
      parameters:
        - name: goal_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
          description: Goal unique identifier
      responses:
        '200':
          description: Training plan retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrainingPlan'
              examples:
                cutting:
                  summary: Cutting Training Plan
                  value:
                    id: 990e8400-e29b-41d4-a716-446655440011
                    goal_id: 770e8400-e29b-41d4-a716-446655440002
                    workout_frequency: 5
                    primary_focus: Strength training with moderate cardio
                    plan_details:
                      strength_training:
                        frequency: 3
                        exercises:
                          - name: "Compound lifts (squat, deadlift, bench)"
                            sets: "3-4"
                            reps: "6-12"
                            rest: "2-3 minutes"
                        progression: "Maintain strength, focus on preserving muscle mass"
                      cardio:
                        frequency: 2
                        type: "LISS or HIIT"
                        duration: "20-30 minutes"
                        intensity: "Zone 2 for fat burning"
                      rest_days: 2
                      deload_week: "Every 4-6 weeks reduce volume by 40%"
                    notes: "Prioritize recovery and protein intake. Avoid overtraining during caloric deficit."
                    created_at: "2025-10-23T08:10:00Z"
                    updated_at: "2025-10-23T08:10:00Z"
                bulking:
                  summary: Bulking Training Plan
                  value:
                    id: 990e8400-e29b-41d4-a716-446655440012
                    goal_id: 770e8400-e29b-41d4-a716-446655440003
                    workout_frequency: 5
                    primary_focus: Progressive overload strength training
                    plan_details:
                      strength_training:
                        frequency: 4
                        exercises:
                          - name: "Progressive overload compound movements"
                            sets: "4-5"
                            reps: "8-12"
                            rest: "2-3 minutes"
                        progression: "Increase weight by 2.5-5% when hitting top of rep range"
                      cardio:
                        frequency: 1
                        type: "Light cardio"
                        duration: "20 minutes"
                        intensity: "Zone 2 for cardiovascular health"
                      rest_days: 2
                      deload_week: "Every 4-6 weeks reduce volume by 40%"
                    notes: "Focus on increasing volume and intensity. Fuel workouts with adequate carbohydrates."
                    created_at: "2025-10-23T08:10:00Z"
                    updated_at: "2025-10-23T08:10:00Z"
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /api/v1/goals/{goal_id}/diet-plan:
    get:
      tags:
        - Plans
      summary: Get diet plan
      description: Retrieve the diet plan with macronutrient targets for a goal
      operationId: getDietPlan
      parameters:
        - name: goal_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
          description: Goal unique identifier
      responses:
        '200':
          description: Diet plan retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DietPlan'
              examples:
                cutting:
                  summary: Cutting Diet Plan
                  value:
                    id: aa0e8400-e29b-41d4-a716-446655440013
                    goal_id: 770e8400-e29b-41d4-a716-446655440002
                    daily_calorie_target: 2200
                    protein_grams: 198
                    carbs_grams: 220
                    fat_grams: 55
                    meal_timing:
                      meals_per_day: 4
                      pre_workout: "30-60 minutes before: 30-40g carbs"
                      post_workout: "Within 2 hours: 30-40g protein, 40-60g carbs"
                      meal_distribution:
                        breakfast: 25
                        lunch: 30
                        pre_workout: 15
                        dinner: 30
                    guidelines: |
                      - Prioritize lean protein sources (chicken, fish, lean beef, tofu)
                      - Include vegetables with every meal for satiety
                      - Time carbohydrates around workouts for energy
                      - Stay hydrated (3-4L water per day)
                      - Consider 1-2 refeed days per week at maintenance calories
                      - Track consistently for best results
                    created_at: "2025-10-23T08:10:00Z"
                    updated_at: "2025-10-23T08:10:00Z"
                bulking:
                  summary: Bulking Diet Plan
                  value:
                    id: aa0e8400-e29b-41d4-a716-446655440014
                    goal_id: 770e8400-e29b-41d4-a716-446655440003
                    daily_calorie_target: 2900
                    protein_grams: 165
                    carbs_grams: 398
                    fat_grams: 80
                    meal_timing:
                      meals_per_day: 5
                      pre_workout: "60-90 minutes before: 40-60g carbs"
                      post_workout: "Within 2 hours: 30-40g protein, 60-80g carbs"
                      meal_distribution:
                        breakfast: 20
                        mid_morning: 15
                        lunch: 25
                        pre_workout: 15
                        dinner: 25
                    guidelines: |
                      - Emphasize nutrient-dense whole foods
                      - Include quality protein with each meal
                      - Carbohydrate timing: prioritize around workouts
                      - Healthy fats from nuts, avocado, olive oil
                      - Stay hydrated (3-4L water per day)
                      - Monitor body fat weekly to ensure lean gains
                      - Adjust calories if gaining too quickly (>0.5% per week)
                    created_at: "2025-10-23T08:10:00Z"
                    updated_at: "2025-10-23T08:10:00Z"
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'

components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: JWT authentication token obtained from /api/v1/auth/login

  schemas:
    UserCreate:
      type: object
      required:
        - email
        - password
        - full_name
        - date_of_birth
        - gender
        - height_cm
        - preferred_calculation_method
        - activity_level
      properties:
        email:
          type: string
          format: email
          maxLength: 255
          description: User's email address (used for login)
          example: john.doe@example.com
        password:
          type: string
          format: password
          minLength: 8
          maxLength: 128
          description: User password (minimum 8 characters)
          example: SecurePass123!
        full_name:
          type: string
          maxLength: 255
          minLength: 1
          description: User's full name
          example: John Doe
        date_of_birth:
          type: string
          format: date
          description: User's date of birth (age must be 13-120 years)
          example: "1990-05-15"
        gender:
          $ref: '#/components/schemas/Gender'
        height_cm:
          type: number
          format: float
          minimum: 120
          maximum: 250
          description: Height in centimeters
          example: 175.5
        preferred_calculation_method:
          $ref: '#/components/schemas/CalculationMethod'
        activity_level:
          $ref: '#/components/schemas/ActivityLevel'

    UserUpdate:
      type: object
      properties:
        full_name:
          type: string
          maxLength: 255
          minLength: 1
          example: John David Doe
        height_cm:
          type: number
          format: float
          minimum: 120
          maximum: 250
          example: 176.0
        preferred_calculation_method:
          $ref: '#/components/schemas/CalculationMethod'
        activity_level:
          $ref: '#/components/schemas/ActivityLevel'
      description: All fields are optional. Only provided fields will be updated.

    User:
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: Unique user identifier
          example: 550e8400-e29b-41d4-a716-446655440000
        email:
          type: string
          format: email
          example: john.doe@example.com
        full_name:
          type: string
          example: John Doe
        date_of_birth:
          type: string
          format: date
          example: "1990-05-15"
        gender:
          $ref: '#/components/schemas/Gender'
        height_cm:
          type: number
          format: float
          example: 175.5
        preferred_calculation_method:
          $ref: '#/components/schemas/CalculationMethod'
        activity_level:
          $ref: '#/components/schemas/ActivityLevel'
        created_at:
          type: string
          format: date-time
          description: Account creation timestamp
          example: "2025-10-23T10:30:00Z"
        updated_at:
          type: string
          format: date-time
          description: Last profile update timestamp
          example: "2025-10-23T10:30:00Z"

    MeasurementCreate:
      type: object
      required:
        - weight_kg
        - calculation_method
        - measured_at
      properties:
        weight_kg:
          type: number
          format: float
          minimum: 30
          maximum: 300
          description: Body weight in kilograms
          example: 90.0
        calculation_method:
          $ref: '#/components/schemas/CalculationMethod'
        waist_cm:
          type: number
          format: float
          minimum: 10
          maximum: 200
          nullable: true
          description: Waist circumference in cm (required for Navy method)
          example: 95.0
        neck_cm:
          type: number
          format: float
          minimum: 10
          maximum: 200
          nullable: true
          description: Neck circumference in cm (required for Navy method)
          example: 40.0
        hip_cm:
          type: number
          format: float
          minimum: 10
          maximum: 200
          nullable: true
          description: Hip circumference in cm (required for Navy method - women only)
          example: 100.0
        chest_mm:
          type: number
          format: float
          minimum: 1
          maximum: 70
          nullable: true
          description: Chest skinfold in mm (required for 3-site and 7-site)
          example: 12.0
        abdomen_mm:
          type: number
          format: float
          minimum: 1
          maximum: 70
          nullable: true
          description: Abdomen skinfold in mm (required for 3-site and 7-site)
          example: 20.0
        thigh_mm:
          type: number
          format: float
          minimum: 1
          maximum: 70
          nullable: true
          description: Thigh skinfold in mm (required for 3-site and 7-site)
          example: 15.0
        tricep_mm:
          type: number
          format: float
          minimum: 1
          maximum: 70
          nullable: true
          description: Tricep skinfold in mm (required for 3-site women and 7-site)
          example: 8.0
        suprailiac_mm:
          type: number
          format: float
          minimum: 1
          maximum: 70
          nullable: true
          description: Suprailiac skinfold in mm (required for 3-site women and 7-site)
          example: 11.0
        midaxillary_mm:
          type: number
          format: float
          minimum: 1
          maximum: 70
          nullable: true
          description: Midaxillary skinfold in mm (required for 7-site)
          example: 12.0
        subscapular_mm:
          type: number
          format: float
          minimum: 1
          maximum: 70
          nullable: true
          description: Subscapular skinfold in mm (required for 7-site)
          example: 14.0
        notes:
          type: string
          nullable: true
          description: Optional notes about the measurement
          example: "Morning measurement, fasted"
        measured_at:
          type: string
          format: date-time
          description: When the measurement was taken
          example: "2025-10-23T08:00:00Z"

    BodyMeasurement:
      type: object
      properties:
        id:
          type: string
          format: uuid
          example: 660e8400-e29b-41d4-a716-446655440001
        user_id:
          type: string
          format: uuid
          example: 550e8400-e29b-41d4-a716-446655440000
        weight_kg:
          type: number
          format: float
          example: 90.0
        calculation_method:
          $ref: '#/components/schemas/CalculationMethod'
        waist_cm:
          type: number
          format: float
          nullable: true
          example: 95.0
        neck_cm:
          type: number
          format: float
          nullable: true
          example: 40.0
        hip_cm:
          type: number
          format: float
          nullable: true
          example: null
        chest_mm:
          type: number
          format: float
          nullable: true
          example: null
        abdomen_mm:
          type: number
          format: float
          nullable: true
          example: null
        thigh_mm:
          type: number
          format: float
          nullable: true
          example: null
        tricep_mm:
          type: number
          format: float
          nullable: true
          example: null
        suprailiac_mm:
          type: number
          format: float
          nullable: true
          example: null
        midaxillary_mm:
          type: number
          format: float
          nullable: true
          example: null
        subscapular_mm:
          type: number
          format: float
          nullable: true
          example: null
        calculated_body_fat_percentage:
          type: number
          format: float
          minimum: 3
          maximum: 50
          description: Body fat percentage calculated by the system
          example: 22.5
        notes:
          type: string
          nullable: true
          example: "Morning measurement, fasted"
        measured_at:
          type: string
          format: date-time
          example: "2025-10-23T08:00:00Z"
        created_at:
          type: string
          format: date-time
          example: "2025-10-23T08:05:00Z"

    GoalCreate:
      type: object
      required:
        - goal_type
        - initial_measurement_id
      properties:
        goal_type:
          $ref: '#/components/schemas/GoalType'
        initial_measurement_id:
          type: string
          format: uuid
          description: ID of the initial body measurement
          example: 660e8400-e29b-41d4-a716-446655440001
        target_body_fat_percentage:
          type: number
          format: float
          minimum: 3
          maximum: 50
          nullable: true
          description: Target body fat % (required for cutting, must be < current BF%)
          example: 15.0
        ceiling_body_fat_percentage:
          type: number
          format: float
          minimum: 3
          maximum: 50
          nullable: true
          description: Maximum body fat % ceiling (required for bulking, must be > current BF%)
          example: 18.0
      description: |
        For cutting goals: provide target_body_fat_percentage (must be lower than initial)
        For bulking goals: provide ceiling_body_fat_percentage (must be higher than initial)

    Goal:
      type: object
      properties:
        id:
          type: string
          format: uuid
          example: 770e8400-e29b-41d4-a716-446655440002
        user_id:
          type: string
          format: uuid
          example: 550e8400-e29b-41d4-a716-446655440000
        goal_type:
          $ref: '#/components/schemas/GoalType'
        status:
          $ref: '#/components/schemas/GoalStatus'
        initial_measurement_id:
          type: string
          format: uuid
          example: 660e8400-e29b-41d4-a716-446655440001
        initial_body_fat_percentage:
          type: number
          format: float
          description: Starting body fat percentage
          example: 22.5
        target_body_fat_percentage:
          type: number
          format: float
          nullable: true
          description: Target body fat (cutting only)
          example: 15.0
        ceiling_body_fat_percentage:
          type: number
          format: float
          nullable: true
          description: Maximum body fat ceiling (bulking only)
          example: null
        initial_weight_kg:
          type: number
          format: float
          description: Starting weight in kilograms
          example: 90.0
        target_calories:
          type: integer
          minimum: 1200
          maximum: 5000
          description: Daily calorie target (deficit for cutting, surplus for bulking)
          example: 2200
        estimated_weeks_to_goal:
          type: integer
          nullable: true
          description: Estimated weeks to reach goal
          example: 40
        current_body_fat_percentage:
          type: number
          format: float
          description: Current body fat percentage (computed field)
          example: 22.5
        progress_percentage:
          type: number
          format: float
          description: Progress toward goal as percentage (computed field)
          example: 0.0
        weeks_elapsed:
          type: integer
          description: Number of weeks since goal started (computed field)
          example: 0
        is_on_track:
          type: boolean
          description: Whether progress is on track (computed field)
          example: true
        started_at:
          type: string
          format: date-time
          example: "2025-10-23T08:10:00Z"
        completed_at:
          type: string
          format: date-time
          nullable: true
          example: null
        created_at:
          type: string
          format: date-time
          example: "2025-10-23T08:10:00Z"
        updated_at:
          type: string
          format: date-time
          example: "2025-10-23T08:10:00Z"

    ProgressEntry:
      type: object
      properties:
        id:
          type: string
          format: uuid
          example: 880e8400-e29b-41d4-a716-446655440006
        goal_id:
          type: string
          format: uuid
          example: 770e8400-e29b-41d4-a716-446655440002
        measurement_id:
          type: string
          format: uuid
          example: 660e8400-e29b-41d4-a716-446655440005
        week_number:
          type: integer
          minimum: 1
          description: Week number since goal started
          example: 1
        body_fat_percentage:
          type: number
          format: float
          description: Body fat percentage at this checkpoint
          example: 22.0
        weight_kg:
          type: number
          format: float
          description: Weight at this checkpoint
          example: 88.5
        body_fat_change:
          type: number
          format: float
          description: Change in body fat % from previous week (negative = decrease)
          example: -0.5
        weight_change_kg:
          type: number
          format: float
          description: Weight change from previous week in kg (negative = loss)
          example: -1.5
        is_on_track:
          type: boolean
          description: Whether progress is meeting expected rate
          example: true
        notes:
          type: string
          nullable: true
          description: Optional notes about this week's progress
          example: "Week 1 complete, feeling strong"
        logged_at:
          type: string
          format: date-time
          description: When progress was logged
          example: "2025-10-30T08:00:00Z"
        created_at:
          type: string
          format: date-time
          example: "2025-10-30T08:05:00Z"

    TrainingPlan:
      type: object
      properties:
        id:
          type: string
          format: uuid
          example: 990e8400-e29b-41d4-a716-446655440011
        goal_id:
          type: string
          format: uuid
          example: 770e8400-e29b-41d4-a716-446655440002
        workout_frequency:
          type: integer
          minimum: 2
          maximum: 7
          description: Number of workout sessions per week
          example: 5
        primary_focus:
          type: string
          maxLength: 100
          description: Primary focus of the training plan
          example: "Strength training with moderate cardio"
        plan_details:
          type: object
          description: Structured training recommendations in JSON format
          properties:
            strength_training:
              type: object
              properties:
                frequency:
                  type: integer
                exercises:
                  type: array
                  items:
                    type: object
                    properties:
                      name:
                        type: string
                      sets:
                        type: string
                      reps:
                        type: string
                      rest:
                        type: string
                progression:
                  type: string
            cardio:
              type: object
              properties:
                frequency:
                  type: integer
                type:
                  type: string
                duration:
                  type: string
                intensity:
                  type: string
            rest_days:
              type: integer
            deload_week:
              type: string
        notes:
          type: string
          nullable: true
          description: Additional guidance and tips
          example: "Prioritize recovery and protein intake. Avoid overtraining during caloric deficit."
        created_at:
          type: string
          format: date-time
          example: "2025-10-23T08:10:00Z"
        updated_at:
          type: string
          format: date-time
          example: "2025-10-23T08:10:00Z"

    DietPlan:
      type: object
      properties:
        id:
          type: string
          format: uuid
          example: aa0e8400-e29b-41d4-a716-446655440013
        goal_id:
          type: string
          format: uuid
          example: 770e8400-e29b-41d4-a716-446655440002
        daily_calorie_target:
          type: integer
          minimum: 1200
          maximum: 5000
          description: Total daily calorie target
          example: 2200
        protein_grams:
          type: integer
          minimum: 50
          maximum: 400
          description: Daily protein target in grams
          example: 198
        carbs_grams:
          type: integer
          minimum: 50
          maximum: 800
          description: Daily carbohydrate target in grams
          example: 220
        fat_grams:
          type: integer
          minimum: 20
          maximum: 200
          description: Daily fat target in grams
          example: 55
        meal_timing:
          type: object
          nullable: true
          description: Optional meal timing recommendations
          properties:
            meals_per_day:
              type: integer
            pre_workout:
              type: string
            post_workout:
              type: string
            meal_distribution:
              type: object
              additionalProperties:
                type: integer
        guidelines:
          type: string
          description: Nutritional advice and guidelines
          example: |
            - Prioritize lean protein sources
            - Include vegetables with every meal
            - Time carbohydrates around workouts
        created_at:
          type: string
          format: date-time
          example: "2025-10-23T08:10:00Z"
        updated_at:
          type: string
          format: date-time
          example: "2025-10-23T08:10:00Z"

    Gender:
      type: string
      enum:
        - male
        - female
      description: User's biological gender (used for body fat calculations)
      example: male

    CalculationMethod:
      type: string
      enum:
        - navy
        - 3_site
        - 7_site
      description: |
        Body fat calculation method:
        - navy: US Navy Circumference Method (requires measuring tape only)
        - 3_site: Jackson-Pollock 3-site skinfold (requires calipers)
        - 7_site: Jackson-Pollock 7-site skinfold (most accurate, requires calipers)
      example: navy

    ActivityLevel:
      type: string
      enum:
        - sedentary
        - lightly_active
        - moderately_active
        - very_active
        - extremely_active
      description: |
        User's activity level for TDEE calculation:
        - sedentary: Little to no exercise
        - lightly_active: Light exercise 1-3 days/week
        - moderately_active: Moderate exercise 3-5 days/week
        - very_active: Hard exercise 6-7 days/week
        - extremely_active: Very hard exercise, physical job, or training twice per day
      example: moderately_active

    GoalType:
      type: string
      enum:
        - cutting
        - bulking
      description: |
        Type of body recomposition goal:
        - cutting: Fat loss phase (caloric deficit)
        - bulking: Muscle gain phase (caloric surplus)
      example: cutting

    GoalStatus:
      type: string
      enum:
        - active
        - completed
        - abandoned
      description: |
        Goal lifecycle status:
        - active: Currently working toward goal
        - completed: Successfully reached target/ceiling
        - abandoned: Goal discontinued before completion
      example: active

    Error:
      type: object
      properties:
        detail:
          type: string
          description: Human-readable error message
          example: The requested resource was not found
        error_code:
          type: string
          description: Machine-readable error code
          example: RESOURCE_NOT_FOUND
        field:
          type: string
          nullable: true
          description: Field name if validation error
          example: target_body_fat_percentage
        value:
          nullable: true
          description: Invalid value if applicable
          example: 3.5

    ValidationError:
      type: object
      properties:
        detail:
          type: array
          items:
            type: object
            properties:
              loc:
                type: array
                items:
                  type: string
                description: Location of the validation error
                example: ["body", "height_cm"]
              msg:
                type: string
                description: Validation error message
                example: ensure this value is greater than or equal to 120
              type:
                type: string
                description: Error type
                example: value_error.number.not_ge
              ctx:
                type: object
                nullable: true
                description: Additional context about the error

  responses:
    BadRequest:
      description: Bad request - Invalid input or business logic violation
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          examples:
            unsafe_target:
              summary: Unsafe body fat target
              value:
                detail: "Target body fat percentage is below safe threshold for males (8%)"
                error_code: UNSAFE_BODY_FAT_TARGET
                field: target_body_fat_percentage
                value: 5.0
            missing_measurements:
              summary: Missing required measurements
              value:
                detail: "Navy method requires waist_cm and neck_cm measurements"
                error_code: MISSING_REQUIRED_MEASUREMENTS
                field: null
                value: null

    Unauthorized:
      description: Authentication required or token invalid/expired
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          examples:
            missing_token:
              summary: Missing authentication token
              value:
                detail: "Authentication token is required"
                error_code: AUTHENTICATION_REQUIRED
            invalid_token:
              summary: Invalid or expired token
              value:
                detail: "Authentication token is invalid or expired"
                error_code: INVALID_TOKEN
            invalid_credentials:
              summary: Invalid login credentials
              value:
                detail: "Incorrect email or password"
                error_code: INVALID_CREDENTIALS

    Forbidden:
      description: Insufficient permissions to access the resource
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            detail: "You do not have permission to access this resource"
            error_code: PERMISSION_DENIED

    NotFound:
      description: Resource not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          examples:
            goal_not_found:
              summary: Goal not found
              value:
                detail: "Goal with ID 770e8400-e29b-41d4-a716-446655440002 not found"
                error_code: GOAL_NOT_FOUND
            measurement_not_found:
              summary: Measurement not found
              value:
                detail: "Measurement with ID 660e8400-e29b-41d4-a716-446655440001 not found"
                error_code: MEASUREMENT_NOT_FOUND

    ValidationError:
      description: Request validation failed
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ValidationError'
          example:
            detail:
              - loc: ["body", "height_cm"]
                msg: "ensure this value is greater than or equal to 120"
                type: "value_error.number.not_ge"
                ctx:
                  limit_value: 120
              - loc: ["body", "email"]
                msg: "value is not a valid email address"
                type: "value_error.email"

    InternalServerError:
      description: Internal server error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            detail: "An unexpected error occurred. Please try again later."
            error_code: INTERNAL_SERVER_ERROR
