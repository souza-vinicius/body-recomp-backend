"""Create training and diet plans tables

Revision ID: acef2c47b80c
Revises: 0e3cbdacd35c
Create Date: 2025-10-29 08:37:12.082067

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'acef2c47b80c'
down_revision: Union[str, None] = '0e3cbdacd35c'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('diet_plans',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('goal_id', sa.UUID(), nullable=False),
    sa.Column('daily_calorie_target', sa.Integer(), nullable=False),
    sa.Column('protein_grams', sa.Integer(), nullable=False),
    sa.Column('carbs_grams', sa.Integer(), nullable=False),
    sa.Column('fat_grams', sa.Integer(), nullable=False),
    sa.Column('meal_timing', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('guidelines', sa.Text(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.CheckConstraint('carbs_grams >= 50 AND carbs_grams <= 800', name='valid_carbs'),
    sa.CheckConstraint('daily_calorie_target >= 1200 AND daily_calorie_target <= 5000', name='valid_calorie_target'),
    sa.CheckConstraint('fat_grams >= 20 AND fat_grams <= 200', name='valid_fat'),
    sa.CheckConstraint('protein_grams >= 50 AND protein_grams <= 400', name='valid_protein'),
    sa.ForeignKeyConstraint(['goal_id'], ['goals.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('goal_id')
    )
    op.create_table('training_plans',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('goal_id', sa.UUID(), nullable=False),
    sa.Column('plan_details', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.Column('workout_frequency', sa.Integer(), nullable=False),
    sa.Column('primary_focus', sa.String(length=100), nullable=False),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.CheckConstraint('workout_frequency > 0 AND workout_frequency <= 7', name='valid_workout_frequency'),
    sa.ForeignKeyConstraint(['goal_id'], ['goals.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('goal_id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('training_plans')
    op.drop_table('diet_plans')
    # ### end Alembic commands ###
